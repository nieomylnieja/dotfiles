#!/bin/bash

set -e

flag_r=false

while getopts “:r” OPTION
do
  case $OPTION in
    r) flag_r=true ;;
    ?) echo "invalid flag"; exit 1 ;;
  esac
done

read_non_empty() {
  local input
  read -r input
  if test -z "$input"; then
    echo >&2 "empty input"
    exit 1
  fi
  echo "$input"
}

generate_new() {
  dir="$(fd -t d -H --base-directory=$HOME/.password-store | awk '{print}; END { print "New" }' | fzf)"

  if [ $dir == "New" ]; then
    echo -n "Pass a full path, a new dir will be created: "
    path="$(read_non_empty)"
  else
    echo -n "Pass a relative path to $dir dir: "
    path="$dir/$(read_non_empty)"
  fi

  echo -n "Provide a username if applicable: "
  read -r username

  local pass="$(apg -n 1 -m 16 -x 16 -a 0 -M SN)"

  if [ -z "$username" ]; then
    echo "$pass" | pass insert -m "$path"
  else
    cat <<EOF | pass insert -m "$path"
$pass
---
username: $username
url: $(basename "$path")
EOF
  fi
  
  xclip -sel clip <<<"$pass"
  echo "Created pass $path entry" && exit 0
}

regenerate() {
  dir="$(fd -t d -H --base-directory=$HOME/.password-store | fzf)"
  local pass="$(apg -n 1 -m 16 -x 16 -a 0 -M SN)"
  
}

main() {
  if $flag_r ; then
    regenerate
  else
    generate_new
  fi
}

main "$@"
